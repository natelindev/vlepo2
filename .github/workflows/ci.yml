name: CI

on:
  pull_request:
    types: ["opened", "edited", "synchronize", "reopened"]
    branches: [main]

# needed for terraform
env:
  ENVIRONMENT: staging

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      RUN_TEST: ${{ steps.determine_test.outputs.RUN_TEST }}
      RUN_TF_PLAN: ${{ steps.determine_tf_plan.outputs.RUN_TF_PLAN }}

    steps:
      - uses: actions/checkout@v3

      - id: determine_tf_plan
        name: determine if running tests is needed
        run: |
          if ! git diff ${{ github.head_ref }} ${{ github.base_ref }} --quiet ./apps; then
              echo "::set-output name=RUN_TEST::true"
          fi
          if ! git diff ${{ github.head_ref }} ${{ github.base_ref }} --quiet ./packages; then
              echo "::set-output name=RUN_TEST::true"
          fi

      - id: determine_tf_plan
        name: determine if terraform plan is needed
        run: |
          if ! git diff ${{ github.head_ref }} ${{ github.base_ref }} --quiet ./devops/infrastructure; then
              echo "::set-output name=RUN_TF_PLAN::true"
          fi

  test:
    runs-on: ubuntu-latest
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.RUN_TEST == 'true' }}

    steps:
      - uses: actions/checkout@v3

      - name: use node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: run `generate`
        run: yarn generate

      - name: run `lint`
        run: yarn lint

      - name: run `typecheck`
        run: yarn typecheck

  plan:
    runs-on: ubuntu-latest
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.RUN_TF_PLAN == 'true' }}

    environment:
      name: staging

    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2

      - name: terraform plan
        run: yarn plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
          ARM_ACCESS_KEY: ${{ secrets.AZ_ACCESS_KEY }}
          TF_VAR_DB_TUNNEL_IP: ${{ secrets.TF_VAR_DB_TUNNEL_IP }}
          TF_VAR_ENVIRONMENT: ${{ secrets.TF_VAR_ENVIRONMENT }}
          TF_VAR_USER_PRINCIPAL_ID: ${{ secrets.TF_VAR_USER_PRINCIPAL_ID }}
